######################################################
#################### DECLARE WAR "####################
######################################################

# These ~50 first lines are a placeholder way to show who will defend
window = {
	name = "declare_war_window"
	datacontext = "[DeclareWarInteractionWindow.GetCharacterInteractionConfirmationWindow]"
	###AGOT ADDED - RV
	datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"
	datacontext = "[CharacterItem.GetCharacter]"
	parentanchor = top|right
	position = { -15 90 }
	size = { 640 970 } #1020
	allow_outside = yes
	movable = no
	layer = middle
	#widgetid = "rv_declare_war_window_id"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		on_start = "[GetScriptedGui('rv_save_defender').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_defender', Character.MakeScope ).End )]"
		#on_start = "[GetScriptedGui('rv_create_revenge_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_defender', Character.MakeScope ).End )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		###AGOT ADDED - RV
		on_start = "[GetScriptedGui('rv_clear_revenge_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
		on_start = "[GetScriptedGui('rv_clear_concubine_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
	}


# Removing this unil we got a proper UX design for jihad and kingdom conquering participants
#	scrollarea = {
#		size = { 90 100% }
#
#		scrollbar_vertical = {
#			using = Scrollbar_Vertical
#		}
#
#		scrollbarpolicy_horizontal = always_off
#
#		scrollwidget = {
#
#			fixedgridbox = {
#				name = "forced_defenders"
#				datamodel = "[DeclareWarInteractionWindow.GetDefenders]"
#				position = { 0 0 }
#				addrow = 90
#				addcolumn = 90
#
#				item = {
#					portrait_head_small = {
#						datacontext = "[WarAllyItem.GetCharacter]"
#
#						tooltip = "[WarAllyItem.GetAllianceReason]"
#
#						blockoverride "opinion_box" {}
#
#						blockoverride "portrait_button_template_tooltip"
#						{
#							tooltip = "WAR_DEFENDER_ALLY_TOOLTIP"
#						}
#					}
#				}
#			}
#		}
#	}

	widget = {
		name = "declare_war_window"
		size = { 640 100% }

		using = Window_Background
		using = Window_Decoration_Warfare

		vbox = {
			using = Window_Margins

			header_pattern_interaction = {
				size = { 0 40 }

				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "[DeclareWarInteractionWindow.GetHeader]"
				}

				blockoverride "button_close"
				{
					onclick = "[DeclareWarInteractionWindow.Close]"
				}
			}

			widget = {

				layoutpolicy_horizontal = expanding
				size = { 0 220 }

				background = {
					using = Background_Area_Dark
					alpha = 0.7
				}

				widget = {
					name = "layer_one_war"
					size = { 100% 100% }

					vbox = {
						datacontext = "[DeclareWarInteractionWindow.GetMilitaryStrengthInfo]"
						margin_top = 24

						declare_war_progressbar = {}

						hbox = {
							margin_top = 6
							margin_bottom = -4

							hbox = {
								name = "your_army"
								margin_top = 6
								margin_bottom = 6
								margin_right = 4
								margin_left = 60

								background = {
									using = Background_Area_Dark
								}

								soldiers_and_quality_small = {
									datacontext = "[DeclareWarInteractionWindow.GetAttackerCharacter]"
									datacontext = "[CharacterItem.GetComposition]"
									layoutpolicy_vertical = expanding

									blockoverride "spacing"
									{
										size = { 44 8 }
									}
								}
							}

							icon = {
								name = "icon_strength_balance"
								size = { 60 60 }
								texture = "gfx/interface/icons/icon_strength_balance.dds"
								framesize = { 60 60 }
								frame = "[GuiMilitaryStrength.GetFrame]"
							}

							hbox = {
								name = "enemy_army"
								margin_top = 6
								margin_bottom = 6
								margin_left = 4
								margin_right = 60

								background = {
									using = Background_Area_Dark
								}

								soldiers_and_quality_small = {
									datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"
									datacontext = "[CharacterItem.GetComposition]"
									layoutpolicy_vertical = expanding

									blockoverride "spacing"
									{
										size = { 44 8 }
									}
								}
							}
						}

						hbox = {
							name = "gold"
							spacing = 80

							character_gold = {
								name = "your_gold"
								datacontext = "[DeclareWarInteractionWindow.GetAttackerCharacter]"
								margin_top = 6
								margin_bottom = 6
								margin_right = 10
								margin_left = 60

								background = {
									using = Background_Area_Dark
								}
							}

							character_gold = {
								name = "enemy_gold"
								datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"
								margin_top = 6
								margin_bottom = 6
								margin_left = 10
								margin_right = 60

								background = {
									using = Background_Area_Dark
								}
							}
						}

						text_multi = {
							name = "comparison_text"
							margin_top = 16
							###AGOT ADDED - RV
							datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
							visible = "[Not(Or(EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel),EqualTo_string(Localize('REVENGE_WAR_NAME'),CasusBelliItem.GetLabel)))]"
							###AGOT ADDED - RV
							text = "[DeclareWarInteractionWindow.GetMilitaryStrength]"
							autoresize = yes
							max_width = 210
							align = center
						}
						###AGOT ADDED - RV
						text_multi = {
							name = "rv_comparison_text"
							margin_top = 16
							datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
							visible = "[Or(EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel),EqualTo_string(Localize('REVENGE_WAR_NAME'),CasusBelliItem.GetLabel))]"
							text = "[Localize('rv_liege_warning')]"
							default_format = "#warning"
							autoresize = yes
							max_width = 210
							align = center
						}
						expand = {}
					}
				}

				widget = {
					name = "layer_two_characters"
					size = { 100% 100% }

					hbox = {
						alwaystransparent = yes
						margin = { 10 6 }

						declare_war_character_portrait = {
							name = "player_character"
							datacontext = "[DeclareWarInteractionWindow.GetAttackerCharacter]"
						}

						expand = {}

						declare_war_character_portrait = {
							name = "enemy_character"
							datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"

							blockoverride "portrait_transformation"
							{
								portrait_scale = { -1 1 }
								portrait_offset = { 1 0 }
							}
						}
					}
				}
			}

			text_single = {
				text = "DECLARE_WAR_CHOOSE_CASUS_BELLI_INSTRUCTION"
				visible = "[Not(DeclareWarInteractionWindow.HasSelectedCasusBelli)]"
				margin_bottom = 8
				default_format = "#I"
			}

			vbox = {
				name = "casus_belli_scroll_box"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				visible = "[Not(DeclareWarInteractionWindow.HasSelectedCasusBelli)]"

				### Casus Belli Scrollarea
				scrollbox = {
					visible = "[Not(DeclareWarInteractionWindow.HasSelectedCasusBelli)]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_margins"
					{
						margin = { 10 15 }
					}


					blockoverride "scrollbox_empty"
					{
						text = NO_VALID_CASUS_BELLIS
						visible = "[DeclareWarInteractionWindow.HasNoValidCasusBellis]"
					}

					blockoverride "scrollbox_content"
					{
						vbox = {
							name = "casus_belli_items"
							datamodel = "[DeclareWarInteractionWindow.GetCasusBelliItems]"
							spacing = 5
							layoutpolicy_horizontal = expanding

							item = {
								button_standard = {
									layoutpolicy_horizontal = expanding
									size = { 0 40 }
									down = "[CasusBelliItem.IsSelected]"
									onclick = "[CasusBelliItem.OnClick]"
									onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
									###AGOT ADDED - RV
									visible = "[Or(Not(EqualTo_string(Localize('rv_declare_private_war_interaction'),CharacterInteractionConfirmationWindow.GetSendName)),Or(EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel),EqualTo_string(Localize('REVENGE_WAR_NAME'),CasusBelliItem.GetLabel)))]"
									onclick = "[GetScriptedGui('rv_create_revenge_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_defender', Character.MakeScope ).End )]"
									onclick = "[GetScriptedGui('rv_create_concubine_list').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_defender', Character.MakeScope ).End )]"
									###AGOT ADDED - RV									

									declare_war_casus_belli_item = {}
								}
							}
						}
					}
				}

			}

			### Selected casus belli
			vbox = {
				visible = "[DeclareWarInteractionWindow.HasSelectedCasusBelli]"
				layoutpolicy_horizontal = expanding
				margin_top = 8
				margin_left = 10
				margin_right = 10
				margin_bottom = 8

				background = {
					using = Background_Area
				}

				button_standard = {
					datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
					layoutpolicy_horizontal = expanding
					minimumsize = { -1 40 }
					onclick = "[CasusBelliItem.OnClick]"

					declare_war_casus_belli_item = {
						button_change = {
							name = "reset_casus_belli_item"
							visible = "[CasusBelliItem.IsSelected]"
							onclick = "[CasusBelliItem.OnClick]"
						}
					}
				}
			}

			text_single = {
				visible = "[And(DeclareWarInteractionWindow.HasSelectedCasusBelli, DeclareWarInteractionWindow.CanShowWarGoalSubview)]"
				margin_bottom = 6
				text = "DECLARE_WAR_CHOOSE_WARGOAL_INSTRUCTION"
				default_format = "#I"
			}

			### War preview after selecting a Casus Belli
			vbox = {
				name = "war_preview"
				visible = "[DeclareWarInteractionWindow.HasSelectedCasusBelli]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin_bottom = 6
				using = Animation_Tab_Switch


				###AGOT ADDED - RV
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 8
					#datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
					#visible = "[EqualTo_string(Localize('DEBUG_WAR_NAME_FALLBACK'),CasusBelliItem.GetLabel)]"

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
						visible = "[EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel)]"
						scrollbox = {
							#visible = "[Not(DeclareWarInteractionWindow.HasSelectedCasusBelli)]"
							#[CasusBelliItem.GetLabel]
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							#datacontext = "[GetPlayer]"
							datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"
							datacontext = "[CharacterItem.GetCharacter]"
				
							blockoverride "scrollbox_margins"
							{
								margin = { 10 10 }
							}
							
				
							blockoverride "scrollbox_empty"
							{
								text = NO_VALID_CASUS_BELLIS
								visible = no
							}
				
							blockoverride "scrollbox_content"
							{
								vbox = {
									name = "rv_prisoner_items"
									#datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"
									datamodel = "[Character.GetPrisoners]"
									#datamodel = "[DeclareWarInteractionWindow.GetTitleItems]"
									spacing = 5
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									state = {
										name = "declare_war_goal_refresh"
										using = Animation_Refresh_FadeOut
									}
	
									state = {
										using = Animation_Refresh_FadeIn
									}
				
									item = {
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 550 45 }
											#down = "[CasusBelliItem.IsSelected]"
											#onclick = "[CasusBelliItem.OnClick]"
											#onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
											visible =  "[GetScriptedGui('rv_rescue_visible_trigger').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"
											onclick = "[GetScriptedGui('rv_toggle_prisoner').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"
											#onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
											#onclick = "[CasusBelliTitleItem.OnClick]"
											down =	"[GetScriptedGui('rv_rescue_trigger').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"										
				
											hbox = {
												name = "rv_prisoner_item"
												margin = { 5 0 }
												spacing = 5
												alwaystransparent = yes
												using = tooltip_es
												#visible = "[Or(ScriptedRelation.HasRelationBetween( GetPlayer, Character.Self ),ObjectsEqual( Character.GetDynasty.Self, GetPlayer.GetDynasty.Self ))]" # Not working, build a list with on_imprison 
			
												using = rv_Relation_Icons_cb
										
												text_single = {
													name = "name"
													layoutpolicy_horizontal = expanding
													text = "[Character.GetUIName]"
													align = left|nobaseline
													autoresize = yes
													alwaystransparent = yes
												}
										
												warning_icon = {
													visible =  "[GetScriptedGui('rv_criminal_warning_icon_visible').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"
													size = { 25 25 }
													alwaystransparent = yes
													tooltip = "RV_IS_CRIMINAL"
												}
											}
										}
									}
									
								}
								vbox = {
									name = "rv_concubine_items"
									#datacontext = "[DeclareWarInteractionWindow.GetDefenderCharacter]"
									datamodel = "[GetPlayer.MakeScope.GetList('rv_defender_concubines')]"
									#datamodel = "[DeclareWarInteractionWindow.GetTitleItems]"
									spacing = 5
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									state = {
										name = "declare_war_goal_refresh"
										using = Animation_Refresh_FadeOut
									}
	
									state = {
										using = Animation_Refresh_FadeIn
									}
				
									item = {
										button_standard = {
											layoutpolicy_horizontal = expanding
											size = { 550 45 }
											datacontext = "[Scope.GetCharacter]"
											#down = "[CasusBelliItem.IsSelected]"
											#onclick = "[CasusBelliItem.OnClick]"
											#onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
											visible =  "[GetScriptedGui('rv_rescue_visible_trigger').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"
											onclick = "[GetScriptedGui('rv_toggle_prisoner').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"
											#onclick = "[PdxGuiTriggerAllAnimations('declare_war_goal_refresh')]"
											#onclick = "[CasusBelliTitleItem.OnClick]"
											down =	"[GetScriptedGui('rv_rescue_trigger').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"										
				
											hbox = {
												name = "rv_concubine_item"
												margin = { 5 0 }
												spacing = 5
												alwaystransparent = yes
												using = tooltip_es
												#visible = "[Or(ScriptedRelation.HasRelationBetween( GetPlayer, Character.Self ),ObjectsEqual( Character.GetDynasty.Self, GetPlayer.GetDynasty.Self ))]" # Not working, build a list with on_imprison 
			
												using = rv_Relation_Icons_cb
										
												text_single = {
													name = "name"
													layoutpolicy_horizontal = expanding
													text = "[Character.GetUIName]"
													align = left|nobaseline
													autoresize = yes
													alwaystransparent = yes
												}
										
												warning_icon = {
													visible =  "[GetScriptedGui('rv_criminal_warning_icon_visible').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Character.MakeScope ).End )]"
													size = { 25 25 }
													alwaystransparent = yes
													tooltip = "RV_IS_CRIMINAL"
												}
											}
										}
									}
									
								}
							}
						}

					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
						visible = "[EqualTo_string(Localize('REVENGE_WAR_NAME'),CasusBelliItem.GetLabel)]"

						scrollbox = {
							#visible = "[Not(DeclareWarInteractionWindow.HasSelectedCasusBelli)]"
							#[CasusBelliItem.GetLabel]
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							#datacontext = "[GetPlayer]"
							datacontext = "[DeclareWarInteractionWindow.GetAttackerCharacter]"
							datacontext = "[CharacterItem.GetCharacter]"
				
							blockoverride "scrollbox_replace_vbox" {
								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									rv_vbox_character_grid = {
										name = "revenge_target"
										margin_top = 10
										spacing = 6
										#visible = no
		
										blockoverride "portrait_datamodel" {
											datamodel = "[Character.MakeScope.GetList('rv_to_be_revenged')]"
										}
	
										blockoverride "portrait_datacontext" {
											#visible = "[GetScriptedGui('rv_revenge_visible_trigger').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_revenge_target', Character.MakeScope ).End )]"
											datacontext = "[Scope.GetCharacter]"
										}
		
										blockoverride "header_text"
										{
											text = "REVENGE_LABEL"
										}
		
										blockoverride "gridbox_slots" {}
									}
									rv_vbox_character_grid = {
										name = "revenge_target_lover"
										#margin_top = 10
										spacing = 6
										visible = no
		
										blockoverride "portrait_datamodel" {
											datamodel = "[Character.MakeScope.GetList('rv_revenging_dead_lovers')]"
										}
	
										blockoverride "portrait_datacontext" {
											#visible = "[GetScriptedGui('rv_revenge_visible_trigger').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_revenge_target', Character.MakeScope ).End )]"
											datacontext = "[Scope.GetCharacter]"
										}
		
										blockoverride "header_text"
										{
											raw_text = "Lover"
										}
		
										blockoverride "gridbox_slots" {}
									}
								}
							}
						}
					}

					vbox = {
						datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
						visible = "[And(Not(EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel)),Not(EqualTo_string(Localize('REVENGE_WAR_NAME'),CasusBelliItem.GetLabel)))]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						scrollbox = {
							visible = "[DeclareWarInteractionWindow.CanShowWarGoalSubview]"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
	
							blockoverride "scrollbox_margins"
							{
								margin = { 10 10 }
							}
	
							blockoverride "scrollbox_content"
							{
								fixedgridbox = {
									datamodel = "[DeclareWarInteractionWindow.GetTitleItems]"
									layoutpolicy_horizontal = expanding
									addcolumn = 550
									addrow = 51
	
									state = {
										name = "declare_war_goal_refresh"
										using = Animation_Refresh_FadeOut
									}
	
									state = {
										using = Animation_Refresh_FadeIn
									}
	
									item = {
										margin_widget = {
											size = { 550 51 }
											margin = { 0 3 }
	
											button_standard = {
												layoutpolicy_horizontal = expanding
												size = { 550 45 }
												down = "[CasusBelliTitleItem.IsSelected]"
												onclick = "[CasusBelliTitleItem.OnClick]"
	
												hbox = {
	
													widget = {
														layoutpolicy_vertical = expanding
														size = { 45 0 }
	
														coa_title_tiny_crown = {
															datacontext = "[CasusBelliTitleItem.GetTitle]"
															parentanchor = center
															using = tooltip_ne
														}
													}
	
													text_single = {
														name = "text"
														layoutpolicy_horizontal = expanding
														text = "[CasusBelliTitleItem.GetName]"
														autoresize = no
														default_format = "#high"
														align = nobaseline
													}
												}
											}
										}
									}
								}
							}
						}
					}

					expand = {}

					hbox = {
						name = "war_outcomes_tabs"
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							margin_left = 15
							text = "[DeclareWarInteractionWindow.GetCurrentTabEffectsLabel]"
							align = nobaseline
						}

						background = {
							using = Background_Area
						}

						### Tabs
						hbox = {
							name = "outcome_effect_tabs"
							spacing = 5
							margin_right = 10

							button_standard = {
								name = "victory_button"
								size = { 45 40 }
								down = "[DeclareWarInteractionWindow.IsEffectsTabVictory]"
								onclick = "[DeclareWarInteractionWindow.SetEffectsTabVictory]"

								tooltip = "TAB_VICTORY"
								using = tooltip_se

								button_icon_war_victory = {
									parentanchor = center
									alwaystransparent = yes
								}
							}

							button_standard = {
								name = "white_peace_button"
								size = { 45 40 }

								down = "[DeclareWarInteractionWindow.IsEffectsTabWhitePeace]"
								onclick = "[DeclareWarInteractionWindow.SetEffectsTabWhitePeace]"
								visible = "[DeclareWarInteractionWindow.GetCbType.IsWhitePeacePossible]"
								tooltip = "TAB_WHITE_PEACE"
								using = tooltip_se

								button_icon_war_peace = {
									parentanchor = center
									alwaystransparent = yes
								}
							}

							button_standard = {
								name = "defeat_button"
								size = { 45 40 }

								down = "[DeclareWarInteractionWindow.IsEffectsTabDefeat]"
								onclick = "[DeclareWarInteractionWindow.SetEffectsTabDefeat]"
								tooltip = "TAB_DEFEAT"
								using = tooltip_se

								button_icon_war_defeat = {
									parentanchor = center
									alwaystransparent = yes
								}

							}
						}
					}

					### Info
					scrollbox = {
						name = "war_outcome_info"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = fixed
						size = {-1 160}

						blockoverride "scrollbox_content"
						{
							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									hbox = {
										layoutpolicy_horizontal = expanding
										spacing = 5

										vbox = {
											layoutpolicy_vertical = expanding

											button_expand = {
												name = "button_expand_other_war_effects"
												frame = "[BoolTo1And2(DeclareWarInteractionWindow.IsWarEffectsExpanded)]"

												onclick = "[DeclareWarInteractionWindow.ToggleWarEffectsExpanded]"
											}
											expand = {}
										}

										text_multi = {
											name = "main_end_war_effect"
											layoutpolicy_horizontal = expanding
											autoresize = yes
											max_width = 320

											default_format = "#high"
											text = "[DeclareWarInteractionWindow.GetCurrentTabMainOutputDescription]"
										}

										expand = {}
									}

									###AGOT ADDED - RV
									hbox = {
										datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
										visible = "[EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel)]"
										layoutpolicy_horizontal = expanding
										vbox = {
											layoutpolicy_horizontal = expanding
											datamodel = "[GetPlayer.MakeScope.GetList('rv_rescue_list_temp')]"
											visible = "[And(DeclareWarInteractionWindow.IsWarEffectsExpanded, DeclareWarInteractionWindow.IsEffectsTabVictory)]"
											item = {
												hbox = {
													visible = "[GetScriptedGui('rv_rescue_visible_trigger').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'rv_prisoner_target', Scope.GetCharacter.MakeScope ).End )]"
													layoutpolicy_horizontal = expanding
													text_multi = {
														text = "rv_release_effect"
														layoutpolicy_horizontal = expanding
														autoresize = yes
														max_width = 360
													}
												}
											}
										}
									}
									###AGOT ADDED - RV

									vbox = {
										text_multi = {
											name = "other_end_war_effects"
											###AGOT ADDED - RV
											datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
											#visible = "[And(DeclareWarInteractionWindow.IsWarEffectsExpanded,Or(Not(EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel)),Not(DeclareWarInteractionWindow.IsEffectsTabVictory)))]"
											visible = "[And(DeclareWarInteractionWindow.IsWarEffectsExpanded, DeclareWarInteractionWindow.IsEffectsTabVictory)]"
											###AGOT ADDED - RV
											layoutpolicy_horizontal = expanding
											text = "[DeclareWarInteractionWindow.GetCurrentTabEffectsDescription]"
											autoresize = yes
											max_width = 360
										}
									}

									expand = {}
								}

								vbox = {
									layoutpolicy_vertical = expanding
									datacontext = "[DeclareWarInteractionWindow.GetClaimant]"

									portrait_head = {
										visible = "[Character.IsValid]"
									}

									expand = {}
								}
							}
						}
					}
				}

				vbox = {
					name = "additional_warning_box"
					layoutpolicy_horizontal = expanding

					hbox = {
						spacing = 10
						margin_top = 4

						icon = {
							name = "attacker_faith_might_join"
							datacontext = "[GetPlayer]"
							visible = "[DeclareWarInteractionWindow.GetCbType.GuiAttackerFaithMightJoin]"
							size = { 40 40 }

							texture = "[Character.GetFaith.GetIcon]"
							tooltip = "WAR_ATTACKER_FAITH_MIGHT_JOIN"

							icon = {
								position = { 5 0 }
								parentanchor = bottom|right
								size = { 25 25 }
								texture = "gfx/interface/icons/casus_bellis/_default.dds"
							}
						}

						icon = {
							name = "defender_faith_might_join"
							datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"
							visible = "[DeclareWarInteractionWindow.GetCbType.GuiDefenderFaithMightJoin]"
							size = { 40 40 }

							texture = "[Character.GetFaith.GetIcon]"
							tooltip = "WAR_DEFENDER_FAITH_MIGHT_JOIN"

							warning_icon = {
								size = { 25 25 }
								position = { 5 0 }
								parentanchor = bottom|right
							}
						}

						hbox = {
							visible = "[DeclareWarInteractionWindow.ShouldShowAdditionalWarning]"
							spacing = 8
							margin_top = 2
							margin_bottom = -5

							warning_icon = {
								size = { 25 25 }
							}

							text_multi = {
								text = "[DeclareWarInteractionWindow.WriteAdditionalWarningMessage]"
								max_width = 350
								autoresize = yes
							}
						}
					}

					scrollarea = {
						name = "defenders_scrollarea"
						visible = "[Not(IsDataModelEmpty(DeclareWarInteractionWindow.GetDefenders))]"
						size = { 540 120 }
						scrollbarpolicy_vertical = always_off
						scrollbarpolicy_horizontal = as_needed
						scrollbar_horizontal = {
							using = Scrollbar_Horizontal
						}
						scrollwidget = {
							hbox = {
								using = Scrollbox_Margins

								fixedgridbox = {
									datamodel_reuse_widgets = yes
									maxverticalslots = 1
									flipdirection = yes
									name = "forced_defenders"
									datamodel = "[DeclareWarInteractionWindow.GetDefenders]"
									addrow = 90
									addcolumn = 80

									item = {
										portrait_head_small = {
											datacontext = "[WarAllyItem.GetCharacter]"

											tooltip = "WAR_DEFENDER_ALLY_TOOLTIP"

											blockoverride "opinion_box" {}
										}
									}
								}
							}
						}
					}
				}

				vbox_interaction_options = {
					visible = "[DeclareWarInteractionWindow.HasSelectedCasusBelli]"
					layoutpolicy_horizontal = expanding
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_top = 10

					### COST
					declare_war_cost = {}
				}


			}

			hbox = {
				margin_top = 4
				margin_bottom = 5

				hbox = {
					name = "declare_war_send_button"

					###AGOT ADDED - RV
					button_standard_big = {
						name = "send_button"
						enabled = "[DeclareWarInteractionWindow.CanSend]"
						onclick = "[DeclareWarInteractionWindow.Send]"

						datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
						visible = "[Not(EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel))]"

						text = "[CharacterInteractionConfirmationWindow.GetSendName]"
						default_format = "#high"

						tooltip = "[DeclareWarInteractionWindow.GetDeclareWarButtonTooltip]"

						clicksound = "event:/SFX/UI/War/sfx_ui_war_declare_war"

						animation_aggressive = {
							visible = "[DeclareWarInteractionWindow.CanSend]"
						}

						hbox = {
							margin_right = 10

							expand = {}

							warning_icon = {
								name = "player_cost_ignore"
								visible = "[And(DeclareWarInteractionWindow.HasSelectedCasusBelli, Or( Or( Not( DeclareWarInteractionWindow.CanAffordCosts ), DeclareWarInteractionWindow.IsBreakingTruce), DeclareWarInteractionWindow.IsBreakingAlliance))]"
								size = { 30 30 }
							}
						}
					}

					button_standard_big = {
						name = "rv_send_button"
						enabled =  "[GetScriptedGui('rv_can_send_rescue_war').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
						onclick = "[DeclareWarInteractionWindow.Send]"

						datacontext = "[DeclareWarInteractionWindow.GetSelectedCasusBelliItem]"
						visible = "[EqualTo_string(Localize('RESCUE_WAR_NAME'),CasusBelliItem.GetLabel)]"

						text = "[CharacterInteractionConfirmationWindow.GetSendName]"
						default_format = "#high"

						tooltip = "[DeclareWarInteractionWindow.GetDeclareWarButtonTooltip]"

						clicksound = "[DeclareWarInteractionWindow.GetConfirmClickSound]"

						animation_aggressive = {
							visible = "[DeclareWarInteractionWindow.CanSend]"
						}

						hbox = {
							margin_right = 10

							expand = {}

							warning_icon = {
								name = "player_cost_ignore"
								visible = "[And(DeclareWarInteractionWindow.HasSelectedCasusBelli, Or( Or( Not( DeclareWarInteractionWindow.CanAffordCosts ), DeclareWarInteractionWindow.IsBreakingTruce), DeclareWarInteractionWindow.IsBreakingAlliance))]"
								size = { 30 30 }
							}
						}
					}
					###AGOT ADDED - RV
				}
			}
		}
	}

	window = {
		name = "character_ally_list_subview"
		datacontext = "[DeclareWarInteractionWindow.GetAllyListContext]"
		visible = "[AllyListSubview.IsShown]"
		parentanchor = top|right
		position = { -615 120 }
		size = { 480 750 }
		movable = no

		using = Window_Background_Subwindow
		using = Animation_ShowHide_Standard

		vbox = {
			margin = { 3 3 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "[AllyListSubview.GetHeaderTitle]"
				}
				blockoverride "button_close"
				{
					onclick = "[AllyListSubview.Close]"
				}
			}

			vbox_character_list = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				datacontext = "[AllyListSubview.GetAllyList]"

				blockoverride "sort_buttons"
				{
					hbox_list_sort_buttons = {
						layoutpolicy_horizontal = expanding

						blockoverride "skill_sort_buttons" {}

						blockoverride "filters_visible" {
							visible = no
						}
					}
				}


				blockoverride "container_implementation" {

					vbox = {
						datamodel = "[CharacterSelectionList.GetList]"
						layoutpolicy_horizontal = expanding
						spacing = 15

						item = {

							hbox = {
								datacontext = "[CharacterListItem.GetCharacter]"

								background = {
									using = Background_Area
								}

								layoutpolicy_horizontal = expanding
								portrait_head_small = {}

								vbox = {
									layoutpolicy_vertical = expanding

									expand = {}

									text_single = {
										name = "ally_character_name"
										text = "[Character.GetName]"
										using = Font_Size_Medium
										align = nobaseline
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											name = "ally_military_strength_text"
											text = "DECLARE_WAR_ALLY_MILITARY_STRENGTH_DESC"
											align = nobaseline
										}

										expand = {}
									}
									expand = {}
								}
								expand = {}
							}
						}
					}
				}

				blockoverride "character_count" {}
			}
		}
	}
}

types DeclareWarTypes
{
	type declare_war_cost = vbox {
		name = "cost"
		margin = { 10 0 }

		background = {
			visible = "[Not( DeclareWarInteractionWindow.CanAffordCosts )]"
			using = Status_Bad
			margin_top = 5
		}

		hbox = {
			name = "costs"
			visible = "[DeclareWarInteractionWindow.HasCost]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			spacing = 5

			text_single = {
				name = "cost_heading"
				align = nobaseline
				text = "WAR_COST"
				using = Font_Size_Big
			}

			hbox = {
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'piety' )]"
				tooltipwidget = { widget_value_breakdown_tooltip = {} }
				spacing = 2

				icon = {
					name = "icon_piety"
					datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'piety' )]"
					visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'piety' ), '(CFixedPoint)0' )]"
					size = { 30 30 }
					texture = "[GetPlayer.GetPietyLevelTexture]"
				}

				text_single = {
					name = "piety"
					datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'piety' )]"
					visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'piety' ), '(CFixedPoint)0' )]"

					text = "[DeclareWarInteractionWindow.GetSpecificCost( 'piety' )|0]"
					align = nobaseline
					using = Font_Size_Big
					default_format = "#high"
				}
			}

			text_single = {
				name = "prestige"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'prestige' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'prestige' ), '(CFixedPoint)0' )]"

				raw_text = "@prestige_icon![DeclareWarInteractionWindow.GetSpecificCost( 'prestige' )|0]"
				using = Font_Size_Big
				align = nobaseline
				default_format = "#high"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
			}

			text_single = {
				name = "renown"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'renown' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'renown' ), '(CFixedPoint)0' )]"

				raw_text = "@dynasty_prestige_icon![DeclareWarInteractionWindow.GetSpecificCost( 'renown' )|0]"
				align = nobaseline
				using = Font_Size_Big
				default_format = "#high"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
			}

			text_single = {
				name = "gold"
				datacontext = "[DeclareWarInteractionWindow.GetCostBreakdown( 'gold' )]"
				visible = "[NotEqualTo_CFixedPoint( DeclareWarInteractionWindow.GetSpecificCost( 'gold' ), '(CFixedPoint)0' )]"

				raw_text = "@gold_icon![DeclareWarInteractionWindow.GetSpecificCost( 'gold' )|0]"
				align = nobaseline
				using = Font_Size_Big
				default_format = "#high"

				tooltipwidget = { widget_value_breakdown_tooltip = {} }
			}
		}

		text_single  = {
			visible = "[Not(DeclareWarInteractionWindow.HasCost)]"
			text = "DECLARE_WAR_NO_COST"
			using = Font_Size_Medium
			align = nobaseline
		}
	}
}

types CharacterInteractionDeclareWar
{
	type widget_progressbar_declare_war = widget {
		widget = {
			size = { 100% 100% }
			scissor = yes

			icon = {
				block "progressbar_texture"
				{
					texture = "gfx/interface/progressbars/war_progress_blue.dds"
				}
				size = { 100% 100% }
				spriteType = Corneredtiled

				modify_texture = {
					name = overlay
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
					blend_mode = mask
				}
			}
		}

		icon = {
			using = Animation_ShowHide_Standard
			parentanchor = right|vcenter
			position = { 5 0 }

			size = { 20 100% }
			texture = "gfx/interface/progressbars/progressbar_center_glow.dds"

			state = {
				name = a
				next = b
				trigger_on_create = yes
				duration = 0.1
				alpha = 1
			}

			state = {
				name = b
				next = a
				duration = 0.2
				alpha = 0.9
			}
		}
	}

	type declare_war_progressbar = 	widget {
		size = { 200 24 }

		widget = {
			size = { 100% 100% }
			scissor = yes

			widget = {
				size = { 100% 100% }

				background = {
					texture = "gfx/interface/progressbars/war_progress_red.dds"
				}
			}

			hbox = {
				widget_progressbar_declare_war = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( GuiMilitaryStrength.GetRatio, '(float)100', '(int32)200' )]"

					blockoverride "progressbar_texture"
					{
						texture = "gfx/interface/progressbars/war_progress_blue.dds"
					}
				}

				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( GuiMilitaryStrength.GetRatio, '(float)100', '(int32)200' )]"
				}
			}
		}

		widget = {
			name = "power_bar_frame"
			parentanchor = top
			size = { 100% 100% }
			alwaystransparent = yes

			background = {
				texture = "gfx/interface/progressbars/progress_frame_war.dds"
				spriteType = Corneredstretched
				spriteborder = { 10 10 }
				margin = { 5 4 }
			}
		}
	}


	type declare_war_character_portrait = hbox {

		vbox = {
			datacontext = "[CharacterItem.GetCharacter]"
			spacing = -37

			portrait_torso = {
				blockoverride "status_icons" {}
				blockoverride "portrait_texture"
				{
					portrait_texture = "[Character.GetPortrait('environment_torso', 'camera_torso', 'war_attacker', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
				}
				blockoverride "portrait_button" {

					vbox = {
						expand = {}

						hbox = {
							layoutpolicy_horizontal = expanding

							expand = {
								layoutpolicy_horizontal = expanding
							}

							spacer = {
								size = { 8 0 }
							}
						}
					}
				}
				blockoverride "opinion_box" {}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				expand = {}

				button_standard = {
					name = "view_allies"
					enabled = "[GreaterThan_int32( CharacterItem.GetAllyCount, '(int32)0' )]"
					size = { 120 30 }
					onclick = "[DeclareWarInteractionWindow.ShowAlliesForCharacter( CharacterItem.Self )]"
					text = "DECLARE_WAR_ALLY_COUNT"
				}
			}
		}
	}

	type declare_war_casus_belli_item = hbox {
		name = "casus_belli_item"
		margin = { 5 0 }
		spacing = 5
		alwaystransparent = yes
		using = tooltip_es

		icon = {
			name = "icon"
			texture = "[CasusBelliItem.GetType.GetIcon]"
			size = { 33 33 }
			alwaystransparent = yes
		}

		text_single = {
			name = "name"
			layoutpolicy_horizontal = expanding
			text = "[CasusBelliItem.GetLabel]"
			align = nobaseline
			autoresize = no
			alwaystransparent = yes
		}

		warning_icon = {
			visible = "[Not( CasusBelliItem.IsValid )]"
			size = { 25 25 }
			alwaystransparent = yes
			tooltip = "[CasusBelliItem.GetInvalidText]"
		}
	}
}

types CharacterGold
{
	type character_gold = hbox {
		datacontext = "[DeclareWarInteractionWindow.GetAttackerCharacter]"
		margin_top = -4
		spacing = 4

		icon = {
			name = "gold_icon"
			size = { 30 30 }
			texture = "gfx/interface/icons/icon_gold.dds"
		}

		text_single = {
			name = "gold_value_positive"
			visible = "[GreaterThanOrEqualTo_CFixedPoint(CharacterItem.GetGold, '(CFixedPoint)0')]"
			layoutpolicy_horizontal = expanding

			text = "[CharacterItem.GetGold|0]"
			align = nobaseline
			default_format = "#high"
			using = Font_Size_Medium
			max_width = 50
		}

		text_single = {
			name = "gold_value_negative"
			visible = "[LessThan_CFixedPoint(CharacterItem.GetGold, '(CFixedPoint)0')]"
			layoutpolicy_horizontal = expanding

			text = "[CharacterItem.GetGold|0]"
			default_format = "#N"
			using = Font_Size_Medium
			max_width = 50
		}
	}
}

###AGOT ADDED - ESR
types rv_interaction_declare_war
{
	type rv_vbox_character_grid = vbox {
		spacing = -3
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
	
		widget = {
			layoutpolicy_horizontal = expanding
			size = { 0 25 }
			min_width = 110
	
			hbox = {
				margin = { 10 0 }
	
				background = {
					using = Text_Label_Background
					alpha = 0.5
					margin = { 0 -2 }
				}
	
				text_single = {
					align = nobaseline
					fontsize = 14
	
					block "header_text"
					{
						raw_text = "#D NEEDS TEXT#!"
					}
				}
	
				expand = {}
	
				text_single = {
					align = nobaseline
					default_format = "#weak"
	
					block "remaining_items" {
						visible = no
					}
				}
			}
		}
	
		hbox = {
			layoutpolicy_horizontal = expanding
	
			using = Animation_Character_Window_Refresh
	
			block "gridbox" {
				dynamicgridbox = {
					flipdirection = yes
					datamodel_wrap = 6
	
					block "gridbox_slots"
					{
						maxverticalslots = 1
					}
	
					block "portrait_datamodel" {
					}
	
					item = {
						portrait_head_small_relationship = {
							block "portrait_visibility"
							{

							}

							block "portrait_datacontext"
							{

							}
							blockoverride "portrait_button"
							{
								using = tooltip_ne
							}
							blockoverride "glow_visible"
							{
								visible = no
							}
							blockoverride "scripted_relation_status_icons" {

							}
						}
					}
					expand = {}
				}
			}
	
			block "find_partner" {}
	
			expand = {}
		}
	
		expand = {}
	}
}
###AGOT ADDED - ESR

