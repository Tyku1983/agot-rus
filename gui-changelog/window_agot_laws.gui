# # types hbox_realm_law
# # {
# # 	name = "tab_liege_realm_laws"
# # 	visible = "[And( GetVariableSystem.HasValue( 'realm_laws_visible', 'yes' ) , GetVariableSystem.HasValue( 'realm_laws_tab', '2' ) )]"
# # 	layoutpolicy_horizontal = expanding
# # 	layoutpolicy_vertical = expanding

# # 	scrollbox = {
# # 		layoutpolicy_horizontal = expanding
# # 		layoutpolicy_vertical = expanding

# # 		blockoverride "scrollbox_content" {
# # 			## LIEGE INFO
# # 			vbox = {
# # 				layoutpolicy_horizontal = expanding
# # 				layoutpolicy_vertical = expanding
# # 				visible = "[Not( GetPlayer.HasLiege )]"
# # 				text_single = {
# # 					text = "T4N_DONT_HAVE_LIEGE"
# # 				}
# # 			}
# # 			vbox = {
# # 				name = "liege_laws"
# # 				layoutpolicy_horizontal = expanding
# # 				layoutpolicy_vertical = expanding
# # 				#margin_right = 10

# # 				visible = "[GetPlayer.HasLiege]"
# # 				#datamodel = "[MyRealmWindow.GetCharacter.GetLiege.MakeScope.GetList('liege_laws')]"

# # 				#dynamicgridbox = {
# # 				dynamicgridbox = {
# # 					flipdirection = yes
# # 					datamodel_wrap = 3
# # 					datamodel = "[MyRealmWindow.GetCharacter.GetLiege.MakeScope.GetList('liege_laws')]"
# # 					#size = { 500 500 }
# # 					maxhorizontalslots = 3
# # 					#maxverticalslots = 100
# # 					addcolumn = 5
# # 					addrow = 100

# # 					item = {
# # 						widget = {
# # 							size = { 180 120 }
# # 							vbox = {
# # 								name = "liege_laws_list"
# # 								layoutpolicy_horizontal = expanding
# # 								#datacontext = "[GetLaw(Concatenate(Scope.GetFlagName , '_law'))]"

# # 								text_label_center = {
# # 									text = "[Localize(Concatenate(Scope.GetFlagName , '_group'))]" #its memey but eh it fucking works
# # 								}

# # 								#icon_button_decorative = {
# # 								button_standard = {
# # 									size = { 120 80 }
# # 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# # 									down = "[GetPlayer.HasLiege]"
# # 									onclick = ""
# # 									tooltipwidget = { liege_law_tooltip = {} }
# # 									using = tooltip_below

# # 									text_multi = {
# # 										text = "[Localize( Concatenate(Scope.GetFlagName , '_law'))]"
# # 										size = { 100% 100% }
# # 										align = center|hcenter
# # 										margin = { 8 5 }
# # 										default_format = "#clickable"
# # 									}
# # 								}
# # 							}
# # 						}
# # 					}
# # 				}
# # 			}
# # 		}
# # 	}
# # }

# # types hbox_liege_realm_law
# # {
# # 	name = "tab_realm_laws"
# # 	visible = "[And( GetVariableSystem.HasValue( 'realm_laws_visible', 'yes' ) , GetVariableSystem.HasValue( 'realm_laws_tab', '1' ) ) ]"
# # 	layoutpolicy_horizontal = expanding
# # 	layoutpolicy_vertical = expanding

# # 	scrollbox = {
# # 		layoutpolicy_horizontal = expanding
# # 		layoutpolicy_vertical = expanding

# # 		blockoverride "scrollbox_content" {
# # 			vbox = {
# # 				#margin_top = 100
# # 				#margin_bottom = 5
# # 				layoutpolicy_horizontal = expanding
# # 				layoutpolicy_vertical = expanding

# # 				hbox = {
# # 					layoutpolicy_horizontal = expanding
# # 					#margin_top = 10

# # 					vbox = { #prev. hbox
# # 						name = "crown_authority"
# # 						datamodel = "[MyRealmWindow.GetRealmLaws]"
# # 						ignoreinvisible = yes

# # 						item = {
# # 							vbox = {
# # 								layoutpolicy_vertical = expanding
# # 								datacontext = "[GuiLawGroup.GetLawGroup]"
# # 								visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'realm_law' ), GuiLawGroup.IsAvailable )]"
# # 								ignoreinvisible = yes

# # 								text_label_center = {
# # 									text = "[LawGroup.GetName]"
# # 								}

# # 								hbox = {
# # 									datamodel = "[GuiLawGroup.GetLaws]"

# # 									background = {
# # 										texture = "gfx/lines/line_lifestyles_unavailable.dds"
# # 										margin = { -8 -12 }
# # 										tintcolor = { 0.7 0.5 0.25 1 }
# # 									}

# # 									item = {
# # 										#icon_button_decorative = {
# # 										button_standard = {
# # 											datacontext = "[GuiLaw.GetLaw]"
# # 											size = { 120 80 }
# # 											enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# # 											down = "[GuiLaw.IsEnacted]"
# # 											alwaystransparent = "[GuiLaw.IsEnacted]"
# # 											onclick = "[GuiLaw.Enact]"
# # 											tooltipwidget = { pass_law_tooltip = {} }
# # 											using = tooltip_below

# # 											text_multi = {
# # 												text = "[Law.GetName]"
# # 												size = { 100% 100% }
# # 												align = center|hcenter
# # 												margin = { 8 5 }
# # 												default_format = "#clickable"
# # 											}
# # 										}
# # 									}
# # 								}
# # 							}
# # 						}
# # 					}
# # 				}
# # 			}
# # 		}
# # 	}
# # }


# types hbox_law_textWindow ################by Maekawa
# {
# 	type hbox_law_text = vbox {	
# 	name = "tab_law"
# 	visible = "[GetVariableSystem.Exists( 'realm_laws_visible' )]"
# 	layoutpolicy_horizontal = expanding
# 	layoutpolicy_vertical = expanding
# 	using = Animation_Tab_Switch
	
# 	hbox = {
# 		layoutpolicy_horizontal = expanding
# 		margin = { 0 80 }
# 		background =  {
# 			texture = "gfx/interface/laws_writing.dds"
# 			alpha = 0.4
# 			using = Mask_Rough_Edges								
# 		}
# 	}	
# 	scrollbox = {
# 		name = "succession_scrollbox"
# 		layoutpolicy_horizontal = expanding
# 		layoutpolicy_vertical = expanding
# 		minimumsize = { 0 350 }

# 		blockoverride "scrollbox_content"
# 		{
# 			margin = { 17 10 }
# 			spacing = 10
# 			hbox = { ##法律
# 			layoutpolicy_horizontal = expanding
# 			using = Background_Inset
# 			hbox = {
# 				name = "military_law"
# 				datamodel = "[MyRealmWindow.GetRealmLaws]"
# 				ignoreinvisible = yes			
# 				item = {
# 					vbox = {
					
# 					datacontext = "[GuiLawGroup.GetLawGroup]"
# 					visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'military_law' ), GuiLawGroup.IsAvailable )]"
# 					ignoreinvisible = yes

# 					text_label_center = {											
# 						text = "[LawGroup.GetName]"
# 					}

# 					spacer = {
# 						visible = "[GetPlayer.HasLiege]"
# 						size = { 5 8 }
# 					}

# 					vbox = {
# 						datamodel = "[GuiLawGroup.GetLaws]"		
# 						item = {
# 							hbox = {
# 							layoutpolicy_horizontal = expanding	
# 								button = {
# 									datacontext = "[GuiLaw.GetLaw]"
# 									size = { 60 60 }
# 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 									down = "[GuiLaw.IsEnacted]"
# 									alwaystransparent = "[GuiLaw.IsEnacted]"
# 									onclick = "[GuiLaw.Enact]"
# 									tooltipwidget = { pass_law_tooltip = {} }
# 									using = tooltip_below

									

# 									button = {
# 										visible = "[Not(GuiLaw.IsEnacted)]"
# 										texture = "gfx/interface/icons/button_icons/marshal_law_is_off.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes
# 									}
									
# 									icon = {
# 										visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 										texture = "gfx/interface/icons/button_icons/marshal_law_is_on.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes

# 										blockoverride "master_color_frame" {
# 											frame = 2
# 										}
# 									}
# 								}
# 								text_label_center = {															
# 									text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
# 								}
# 							}
# 						}
# 					}											
# 				}
# 			}
# 		}
# 		hbox = {
# 			name = "ruling_system"
# 			datamodel = "[MyRealmWindow.GetRealmLaws]"									
# 			ignoreinvisible = yes			
# 			item = {
# 				vbox = {
					
# 					datacontext = "[GuiLawGroup.GetLawGroup]"
# 					visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'ruling_law' ), GuiLawGroup.IsAvailable )]"
# 					ignoreinvisible = yes

# 					text_label_center = {
# 						text = "[LawGroup.GetName]"
# 					}

# 					spacer = {
# 						visible = "[GetPlayer.HasLiege]"
# 						size = { 5 8 }
# 					}

# 					vbox = {
# 						datamodel = "[GuiLawGroup.GetLaws]"		
# 						item = {
# 							hbox = {
# 							layoutpolicy_horizontal = expanding	
# 								button = {
# 									datacontext = "[GuiLaw.GetLaw]"
# 									size = { 60 60 }
# 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 									down = "[GuiLaw.IsEnacted]"
# 									alwaystransparent = "[GuiLaw.IsEnacted]"
# 									onclick = "[GuiLaw.Enact]"
# 									tooltipwidget = { pass_law_tooltip = {} }
# 									using = tooltip_below

									

# 									button = {
# 										visible = "[Not(GuiLaw.IsEnacted)]"
# 										texture = "gfx/interface/icons/button_icons/ruling_law_is_off.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes
# 									}
									
# 									icon = {
# 										visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 										texture = "gfx/interface/icons/button_icons/ruling_law_is_on.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes

# 										blockoverride "master_color_frame" {
# 											frame = 2
# 										}
# 									}
# 								}
# 								text_label_center = {															
# 									text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
# 								}
# 							}
# 						}
# 					}											
# 				}
# 			}
# 		}
# 	}
# 		hbox = { ##法律
# 			layoutpolicy_horizontal = expanding
# 			using = Background_Inset
# 		hbox = {
# 			name = "tax_law"
# 			datamodel = "[MyRealmWindow.GetRealmLaws]"
# 			ignoreinvisible = yes	
# 			item = {
# 				vbox = {
					
# 					datacontext = "[GuiLawGroup.GetLawGroup]"
# 					visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'tax_law' ), GuiLawGroup.IsAvailable )]"
# 					ignoreinvisible = yes

# 					text_label_center = {
# 						text = "[LawGroup.GetName]"
# 					}

# 					spacer = {
# 						visible = "[GetPlayer.HasLiege]"
# 						size = { 5 8 }
# 					}

# 					vbox = {
# 						datamodel = "[GuiLawGroup.GetLaws]"		
# 						item = {
# 							hbox = {
# 							layoutpolicy_horizontal = expanding	
# 								button = {
# 									datacontext = "[GuiLaw.GetLaw]"
# 									size = { 60 60 }
# 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 									down = "[GuiLaw.IsEnacted]"
# 									alwaystransparent = "[GuiLaw.IsEnacted]"
# 									onclick = "[GuiLaw.Enact]"
# 									tooltipwidget = { pass_law_tooltip = {} }
# 									using = tooltip_below

									

# 									button = {
# 										visible = "[Not(GuiLaw.IsEnacted)]"
# 										texture = "gfx/interface/icons/button_icons/tax_law_is_off.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes
# 									}
									
# 									icon = {
# 										visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 										texture = "gfx/interface/icons/button_icons/tax_law_is_on.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes

# 										blockoverride "master_color_frame" {
# 											frame = 2
# 										}
# 									}
# 								}
# 								text_label_center = {															
# 									text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
# 								}
# 							}
# 						}
# 					}											
# 				}
# 			}
# 		}
# 		hbox = {
# 			name = "diplomacy_law"
# 			datamodel = "[MyRealmWindow.GetRealmLaws]"
# 			ignoreinvisible = yes			
# 			item = {
# 				vbox = {
					
# 					datacontext = "[GuiLawGroup.GetLawGroup]"
# 					visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'diplomacy_law' ), GuiLawGroup.IsAvailable )]"
# 					ignoreinvisible = yes

# 					text_label_center = {											
# 						text = "[LawGroup.GetName]"
# 					}

# 					spacer = {
# 						visible = "[GetPlayer.HasLiege]"
# 						size = { 5 8 }
# 					}

# 					vbox = {
# 						datamodel = "[GuiLawGroup.GetLaws]"		
# 						item = {
# 							hbox = {
# 							layoutpolicy_horizontal = expanding	
# 								button = {
# 									datacontext = "[GuiLaw.GetLaw]"
# 									size = { 60 60 }
# 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 									down = "[GuiLaw.IsEnacted]"
# 									alwaystransparent = "[GuiLaw.IsEnacted]"
# 									onclick = "[GuiLaw.Enact]"
# 									tooltipwidget = { pass_law_tooltip = {} }
# 									using = tooltip_below

									

# 									button = {
# 										visible = "[Not(GuiLaw.IsEnacted)]"
# 										texture = "gfx/interface/icons/button_icons/law_is_off.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes
# 									}
									
# 									icon = {
# 										visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 										texture = "gfx/interface/icons/button_icons/law_is_on.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes

# 										blockoverride "master_color_frame" {
# 											frame = 2
# 										}
# 									}
# 								}
# 								text_label_center = {															
# 									text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
# 								}
# 							}
# 						}
# 					}											
# 				}
# 			}
# 		}
# 	}
# 	hbox = { ##法律
# 		layoutpolicy_horizontal = expanding
# 		using = Background_Inset
# 		hbox = {
# 			name = "declare_wars"
# 			datamodel = "[MyRealmWindow.GetRealmLaws]"									
# 			ignoreinvisible = yes			
# 			item = {
# 				vbox = {
					
# 					datacontext = "[GuiLawGroup.GetLawGroup]"
# 					visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'declare_wars' ), GuiLawGroup.IsAvailable )]"
# 					ignoreinvisible = yes

# 					text_label_center = {
# 						text = "[LawGroup.GetName]"
# 					}

# 					spacer = {
# 						visible = "[GetPlayer.HasLiege]"
# 						size = { 5 8 }
# 					}

# 					vbox = {
# 						datamodel = "[GuiLawGroup.GetLaws]"							
# 						item = {
# 							hbox = {
# 								layoutpolicy_horizontal = expanding	
# 								button = {
# 									datacontext = "[GuiLaw.GetLaw]"
# 									size = { 60 60 }
# 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 									down = "[GuiLaw.IsEnacted]"
# 									alwaystransparent = "[GuiLaw.IsEnacted]"
# 									onclick = "[GuiLaw.Enact]"
# 									tooltipwidget = { pass_law_tooltip = {} }
# 									using = tooltip_below

									

# 									button = {
# 										visible = "[Not(GuiLaw.IsEnacted)]"
# 										texture = "gfx/interface/icons/button_icons/war_law_is_off.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes
# 									}
									
# 									icon = {
# 										visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 										texture = "gfx/interface/icons/button_icons/war_law_is_on.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes

# 										blockoverride "master_color_frame" {
# 											frame = 2
# 										}
# 									}
# 								}
# 								text_label_center = {															
# 									text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
# 								}
# 							}
# 						}
# 					}											
# 				}
# 			}
# 		}
# 		hbox = {
# 			name = "religious_law"
# 			datamodel = "[MyRealmWindow.GetRealmLaws]"
# 			ignoreinvisible = yes	
# 			item = {
# 				vbox = {
					
# 					datacontext = "[GuiLawGroup.GetLawGroup]"
# 					visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'religious_law' ), GuiLawGroup.IsAvailable )]"
# 					ignoreinvisible = yes

# 					text_label_center = {
# 						text = "[LawGroup.GetName]"
# 					}

# 					spacer = {
# 						visible = "[GetPlayer.HasLiege]"
# 						size = { 5 8 }
# 					}

# 					vbox = {
# 						datamodel = "[GuiLawGroup.GetLaws]"		
# 						item = {
# 							hbox = {
# 								layoutpolicy_horizontal = expanding	
# 								button = {
# 									datacontext = "[GuiLaw.GetLaw]"
# 									size = { 60 60 }
# 									enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 									down = "[GuiLaw.IsEnacted]"
# 									alwaystransparent = "[GuiLaw.IsEnacted]"
# 									onclick = "[GuiLaw.Enact]"
# 									tooltipwidget = { pass_law_tooltip = {} }
# 									using = tooltip_below

									

# 									button = {
# 										visible = "[Not(GuiLaw.IsEnacted)]"
# 										texture = "gfx/interface/icons/button_icons/religious_law_is_off.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes
# 									}
									
# 									icon = {
# 										visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 										texture = "gfx/interface/icons/button_icons/religious_law_is_on.dds"
# 										parentanchor = center
# 										size = { 42 42 }
# 										alwaystransparent = yes

# 										blockoverride "master_color_frame" {
# 											frame = 2
# 										}
# 									}
# 								}
# 								text_label_center = {															
# 									text = "[GuiLaw.GetLaw.GetNameNoTooltip]"
# 								}
# 							}
# 						}
# 					}											
# 				}
# 			}
# 		}
# 	}
# 				hbox = { ##法律
# 					layoutpolicy_horizontal = expanding
# 					using = Background_Inset
# 					hbox = {
# 						name = "beard_law"
# 						datamodel = "[MyRealmWindow.GetRealmLaws]"
# 						ignoreinvisible = yes			
# 						item = {
# 							vbox = {								
# 								datacontext = "[GuiLawGroup.GetLawGroup]"
# 								visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'beard_law' ), GuiLawGroup.IsAvailable )]"
# 								ignoreinvisible = yes

# 								text_label_center = {											
# 									text = "[LawGroup.GetName]"
# 								}

# 								spacer = {
# 									visible = "[GetPlayer.HasLiege]"
# 									size = { 5 8 }
# 								}

# 								hbox = {
# 									datamodel = "[GuiLawGroup.GetLaws]"		
# 									item = {
# 										hbox = {
# 										layoutpolicy_horizontal = expanding	
# 											button = {
# 												datacontext = "[GuiLaw.GetLaw]"
# 												size = { 60 60 }
# 												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 												down = "[GuiLaw.IsEnacted]"
# 												alwaystransparent = "[GuiLaw.IsEnacted]"
# 												onclick = "[GuiLaw.Enact]"
# 												tooltipwidget = { pass_law_tooltip = {} }
# 												using = tooltip_below

												

# 												button = {
# 													visible = "[Not(GuiLaw.IsEnacted)]"
# 													texture = "gfx/interface/icons/button_icons/civi_law_is_off.dds"
# 													parentanchor = center
# 													size = { 42 42 }
# 													alwaystransparent = yes
# 												}
												
# 												icon = {
# 													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 													texture = "gfx/interface/icons/button_icons/civi_law_is_on.dds"
# 													parentanchor = center
# 													size = { 42 42 }
# 													alwaystransparent = yes

# 													blockoverride "master_color_frame" {
# 														frame = 2
# 													}
# 												}
# 											}
# 										}
# 									}
# 								}											
# 							}
# 						}
# 					}
# 					hbox = {
# 						name = "art_law"
# 						datamodel = "[MyRealmWindow.GetRealmLaws]"
# 						ignoreinvisible = yes			
# 						item = {
# 							vbox = {								
# 								datacontext = "[GuiLawGroup.GetLawGroup]"
# 								visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'art_law' ), GuiLawGroup.IsAvailable )]"
# 								ignoreinvisible = yes

# 								text_label_center = {											
# 									text = "[LawGroup.GetName]"
# 								}

# 								spacer = {
# 									visible = "[GetPlayer.HasLiege]"
# 									size = { 5 8 }
# 								}

# 								hbox = {
# 									datamodel = "[GuiLawGroup.GetLaws]"		
# 									item = {
# 										hbox = {
# 										layoutpolicy_horizontal = expanding	
# 											button = {
# 												datacontext = "[GuiLaw.GetLaw]"
# 												size = { 60 60 }
# 												enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
# 												down = "[GuiLaw.IsEnacted]"
# 												alwaystransparent = "[GuiLaw.IsEnacted]"
# 												onclick = "[GuiLaw.Enact]"
# 												tooltipwidget = { pass_law_tooltip = {} }
# 												using = tooltip_below

												

# 												button = {
# 													visible = "[Not(GuiLaw.IsEnacted)]"
# 													texture = "gfx/interface/icons/button_icons/civi_law_is_off.dds"
# 													parentanchor = center
# 													size = { 42 42 }
# 													alwaystransparent = yes
# 												}
												
# 												icon = {
# 													visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
# 													texture = "gfx/interface/icons/button_icons/civi_law_is_on.dds"
# 													parentanchor = center
# 													size = { 42 42 }
# 													alwaystransparent = yes

# 													blockoverride "master_color_frame" {
# 														frame = 2
# 													}
# 												}
# 											}
# 										}
# 									}
# 								}											
# 							}
# 						}
# 					}
# 				}
# 			}
# 		}
# 	}
# }
