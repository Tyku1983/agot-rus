widget = {
	allow_outside = yes
	name = "event_window_character_selection_short"
	size = { 480 172 } # Size of the insert into the event window which takes into account the margin below

	container = {
		allow_outside = yes
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		position = { 0 0 }
		ignoreinvisible = yes

		vbox = {
			allow_outside = yes
			margin = { 0 -28 } # Pushes the box around

			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				minimumsize = { 460 204 } # Size of the container of characters

				blockoverride "scrollbox_content"
				{
					vbox = {
						datamodel = "[GetPlayer.MakeScope.GetList('possible_characters')]"
						layoutpolicy_horizontal = expanding
						margin = { -6 -8 }

						item = {
							button_standard = {
								name = "background_button"
								size = { 436 68 }
								using = tooltip_ws
								layoutpolicy_vertical = expanding
								datacontext = "[Scope.GetCharacter]"
								onclick = "[GetScriptedGui('si_set_selected_character').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('selected_char', Character.MakeScope).End)]"
								down = "[GetScriptedGui('si_set_selected_character').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('selected_char', Character.MakeScope).End)]"

								tooltipwidget = {
									cooltip_type = {
										blockoverride "interaction_info" {
											text = "CHARACTER_TOOLTIP_INSTRUCTION"
										}
									}
								}
								tooltip_offset = { 0 0 }
								tooltip_verticalbehavior = slide
								tooltip_horizontalbehavior = mirror

								portrait_head_small = {
									scale = 0.75
									tooltip_visible = no
								}
								text_single = {
									name = "character_name"
									text = "[Character.GetUINameNotMeNoTooltip]"
									using = Font_Size_Medium
									align = center
									position = { 70 20 }
								}
								expand = {}
							}
						}
						expand = {}
					}
				}
			}
		}
	}
}